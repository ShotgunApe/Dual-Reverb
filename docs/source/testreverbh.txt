#pragma once
#include <juce_audio_processors/juce_audio_processors.h>
#include "components/DelayLine.h"
#include "juce_audio_basics/juce_audio_basics.h"

class TestReverb
{
public:
    TestReverb();
    ~TestReverb();

    void prepareReverb(double sampleRate);
    void processReverb(juce::AudioBuffer<float>& buffer, int channel);
    void updatePosition(juce::AudioBuffer<float>& buffer);

private:

    // Comb filters in parallel
    juce::AudioBuffer<float> combOne;
    juce::AudioBuffer<float> combTwo;
    juce::AudioBuffer<float> combThr;
    juce::AudioBuffer<float> combFou;

    // DelayLine for each comb filter
    DelayLine channelA;
    DelayLine channelB;
    DelayLine channelC;
    DelayLine channelD;

};
